declaration         = "var" IDENT type_annotation [ ":=" expression ] ";";
type_annotation     = IDENT [ "<" type_annotation { "," type_annotation } ">" ];
expression          = logical_or;
logical_or          = logical_and { "||" logical_and };
logical_and         = equality { "&&" equality };
equality            = comparison { ("==" | "!=") comparison };
comparison          = additive { ("<" | ">" | "<=" | ">=") additive };
additive            = multiplicative { ("+" | "-") multiplicative };
multiplicative      = unary { ("*" | "/") unary };
unary               = [ "!" | "-" ] primary;
primary             = NUMBER | BOOLEAN | IDENT | list | "(" expression ")" ;
list                = "[" [ expression { "," expression } ] "]";
boolean_literal     = "true" | "false";
if_statement        = "if" "(" expression ")" block [ else_clause ];
else_clause         = "else" (if_statement | block);
block               = "{" { statement } "}";
statement           = declaration | if_statement | expression_statement ;
expression_statement = expression ";";